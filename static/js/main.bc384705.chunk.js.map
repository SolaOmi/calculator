{"version":3,"sources":["index.js"],"names":["btnNum","pillNum","btnOp","DisplayBox","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","value","Calculator","_this","Object","_home_sola_Code_JavaScript_React_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sola_Code_JavaScript_React_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sola_Code_JavaScript_React_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","defaultState","curVal","preVal","disVal","operator","state","number","cur","val","length","setState","op","pre","eval","Number","isInteger","toFixed","toString","toExponential","slice","includes","_this2","onClick","clear","plusMinus","percent","clickNumber","equals","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc384705.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet btnNum = 'btn circle white-red';\nlet pillNum = 'btn pill white-red';\nlet btnOp = 'btn circle pink-white';\n\nfunction DisplayBox(props) {\n  return (\n    <div id=\"display\" className=\"pill\">\n      <p id=\"display-text\">{props.value}</p>\n    </div>\n  );\n}\n\nclass Calculator extends React.Component {\n\n  defaultState  = {\n    curVal: '',\n    preVal: '',\n    disVal: '',\n    operator: ''\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = this.defaultState;\n  }\n\n  clickNumber(number) {\n    let cur = this.state.curVal;\n    let val = cur + number;\n\n    if (cur.length < 9) {\n      this.setState({\n        curVal: val,\n        disVal: val\n      });\n    }\n  }\n\n  clear() {\n    this.setState(this.defaultState);\n  }\n\n  operator(op) {\n    let cur = this.state.curVal;\n    if (cur) {\n      this.setState({\n        preVal: cur,\n        curVal: '',\n        disVal: '',\n        // put spaces around operator to avoid postfix error during evaluation\n        operator: ' ' + op + ' '\n      });\n    }\n  }\n\n  equals() {\n    let cur = this.state.curVal;\n    let pre = this.state.preVal;\n    let op = this.state.operator;\n\n    if (cur && pre && op) {\n      cur = eval(pre + op + cur);\n      cur = Number.isInteger(cur) ? cur : cur.toFixed(2);\n      cur = cur.toString().length > 9 ? cur.toExponential(2) : cur;\n      cur = cur.toString();\n\n      this.setState({\n        curVal: cur,\n        disVal: cur,\n        preVal: '',\n        operator: ''\n      })\n    }\n  }\n\n  plusMinus() {\n    let cur = this.state.curVal;\n    let val = cur[0] === '-' ? cur.slice(1) : '-' + cur;\n\n    if (cur) {\n      this.setState({\n        curVal: val,\n        disVal: val\n      })\n    }\n  }\n\n  percent() {\n    let cur = this.state.curVal;\n    let pre = this.state.preVal;\n    if(pre && cur && !cur.includes('%')) {\n      this.setState({\n        curVal: Number(cur) * Number(pre) / 100,\n        disVal: cur + '%'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"calculator\" >\n        <DisplayBox value={this.state.disVal}/ >\n        <div id=\"row1\" className=\"calc-row\">\n          <button className={btnOp}  onClick={() => this.clear()}>AC</button>\n          <button className={btnOp}  onClick={() => this.plusMinus()}>+/-</button>\n          <button className={btnOp}  onClick={() => this.percent()}>%</button>\n          <button className={btnOp}  onClick={() => this.operator('/')}>/</button>\n        </div>\n        <div id=\"row2\" className=\"calc-row\">\n          <button className={btnNum} onClick={() => this.clickNumber('7')}>7</button>\n          <button className={btnNum} onClick={() => this.clickNumber('8')}>8</button>\n          <button className={btnNum} onClick={() => this.clickNumber('9')}>9</button>\n          <button className={btnOp}  onClick={() => this.operator('*')}>x</button>\n        </div>\n        <div id=\"row3\" className=\"calc-row\">\n          <button className={btnNum} onClick={() => this.clickNumber('4')}>4</button>\n          <button className={btnNum} onClick={() => this.clickNumber('5')}>5</button>\n          <button className={btnNum} onClick={() => this.clickNumber('6')}>6</button>\n          <button className={btnOp}  onClick={() => this.operator('+')}>+</button>\n        </div>\n        <div id=\"row4\" className=\"calc-row\">\n          <button className={btnNum} onClick={() => this.clickNumber('1')}>1</button>\n          <button className={btnNum} onClick={() => this.clickNumber('2')}>2</button>\n          <button className={btnNum} onClick={() => this.clickNumber('3')}>3</button>\n          <button className={btnOp}  onClick={() => this.operator('-')}>-</button>\n        </div>\n        <div id=\"row5\" className=\"calc-row\">\n          <button id=\"zero\" className={pillNum} onClick={() => this.clickNumber('0')}>0</button>\n          <button className={btnNum} onClick={() => this.clickNumber('.')}>.</button>\n          <button className={btnOp} onClick={() => this.equals()}>=</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ==========================================================================\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}