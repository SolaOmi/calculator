{"version":3,"sources":["index.js"],"names":["DisplayBox","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","value","Calculator","_this","Object","_home_sola_Code_JavaScript_React_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sola_Code_JavaScript_React_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sola_Code_JavaScript_React_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","curVal","preVal","operator","number","setState","cur","pre","op","eval","toFixed","toString","slice","_this2","onClick","clear","plusMinus","divide","clickNumber","multiply","plus","minus","equals","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1752413d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction DisplayBox(props) {\n  return (\n    <div id=\"display\" className=\"pill\">\n      <p id=\"display-text\">{props.value}</p>\n    </div>\n  );\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curVal: '',\n      preVal: '',\n      operator: ''\n    }\n  }\n\n  clickNumber(number) {\n    this.setState({\n      curVal: this.state.curVal + number\n    });\n  }\n\n  clear() {\n    this.setState({\n      curVal: '',\n      preVal: '',\n      operator: ''\n    });\n  }\n\n  plus() {\n    if (!this.state.curVal) {\n      this.setState({curVal: '+'});\n    } else if (this.state.curVal && this.state.curVal !== '+') {\n      this.setState({\n        preVal: this.state.curVal,\n        curVal: '',\n        // put spaces around operator to avoid postfix error during evaluation.\n        operator: ' + ',\n      });\n    }\n  }\n\n  minus() {\n    if (!this.state.curVal) {\n      this.setState({curVal: '-'});\n    } else if (this.state.curVal && this.state.curVal !== '-') {\n      this.setState({\n        preVal: this.state.curVal,\n        curVal: '',\n        // put spaces around operator to avoid postfix error during evaluation.\n        operator: ' - ',\n      });\n    }\n  }\n\n  multiply() {\n    if (this.state.curVal) {\n      this.setState({\n        preVal: this.state.curVal,\n        curVal: '',\n        operator: '*',\n      });\n    }\n  }\n\n  divide() {\n    if (this.state.curVal) {\n      this.setState({\n        preVal: this.state.curVal,\n        curVal: '',\n        operator: '/',\n      });\n    }\n  }\n\n  equals() {\n    let cur = this.state.curVal;\n    let pre = this.state.preVal;\n    let op = this.state.operator;\n\n    if (cur && pre && op) {\n      this.setState({\n        curVal: eval(pre + op + cur).toFixed(4).toString(),\n        preVal: '',\n        operator: ''\n      })\n    }\n  }\n\n  plusMinus() {\n    let cur = this.state.curVal;\n    if (cur) {\n      this.setState({\n        curVal: cur[0] === '-' ? cur.slice(1) : '-' + cur\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"calculator\" >\n        <DisplayBox value={this.state.curVal}/ >\n        <div id=\"row1\" className=\"calc-row\">\n          <button className=\"btn circle pink-white\" onClick={() => this.clear()}>AC</button>\n          <button className=\"btn circle pink-white\" onClick={() => this.plusMinus()}>+/-</button>\n          <button className=\"btn circle pink-white\">%</button>\n          <button className=\"btn circle pink-white\" onClick={() => this.divide()}>/</button>\n        </div>\n        <div id=\"row2\" className=\"calc-row\">\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('7')}>7</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('8')}>8</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('9')}>9</button>\n          <button className=\"btn circle pink-white\" onClick={() => this.multiply()}>x</button>\n        </div>\n        <div id=\"row3\" className=\"calc-row\">\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('4')}>4</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('5')}>5</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('6')}>6</button>\n          <button className=\"btn circle pink-white\" onClick={() => this.plus()}>+</button>\n        </div>\n        <div id=\"row4\" className=\"calc-row\">\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('1')}>1</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('2')}>2</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('3')}>3</button>\n          <button className=\"btn circle pink-white\" onClick={() => this.minus()}>-</button>\n        </div>\n        <div id=\"row5\" className=\"calc-row\">\n          <button id=\"zero\" className=\"btn pill white-red\" onClick={() => this.clickNumber('0')}>0</button>\n          <button className=\"btn circle white-red\" onClick={() => this.clickNumber('.')}>.</button>\n          <button className=\"btn circle pink-white\"onClick={() => this.equals()}>=</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ==========================================================================\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}